{"version":3,"sources":["style/images/blue-candy.png","style/images/green-candy.png","style/images/orange-candy.png","style/images/purple-candy.png","style/images/red-candy.png","style/images/yellow-candy.png","style/images/blank.png","App.js","index.js"],"names":["candyColors","blueCandy","greenCandy","orangeCandy","purpleCandy","redCandy","yellowCandy","App","useState","currentColorArr","setCurrentColorArr","elementDrag","setElementDrag","elementReplaced","setElementReplaced","score","setScore","findFourFromColumn","i","columnOfFour","width","matchesColor","isBlank","blank","every","element","prev","forEach","findFourFromRow","rowOfFour","includes","findThreeFromColumn","columnOfThree","findThreeFromRow","rowOfThree","moveDown","randomNumber","Math","floor","random","length","useEffect","randomColorArray","randomColor","push","getInitialBoard","timer","setInterval","clearInterval","dragStart","e","target","dragDrop","dragEnd","currentElementDragId","parseInt","getAttribute","currentElementReplacedId","move","isFindFourFromColumn","isFindFourFromRow","isFindThreeFromColumn","isFindThreeFromRow","className","map","candyColor","index","src","alt","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d0ec4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blue-candy.73120c15.png\";","export default __webpack_public_path__ + \"static/media/green-candy.599f7016.png\";","export default __webpack_public_path__ + \"static/media/orange-candy.f106b2cd.png\";","export default __webpack_public_path__ + \"static/media/purple-candy.ae25b8a5.png\";","export default __webpack_public_path__ + \"static/media/red-candy.3658b37c.png\";","export default __webpack_public_path__ + \"static/media/yellow-candy.a3d87a9b.png\";","export default __webpack_public_path__ + \"static/media/blank.fbcb9179.png\";","import React, {useEffect, useState} from 'react';\nimport blueCandy from './style/images/blue-candy.png'\nimport greenCandy from './style/images/green-candy.png'\nimport orangeCandy from './style/images/orange-candy.png'\nimport purpleCandy from './style/images/purple-candy.png'\nimport redCandy from './style/images/red-candy.png'\nimport yellowCandy from './style/images/yellow-candy.png'\nimport blank from './style/images/blank.png'\n\n\n\nconst width=8;\nconst candyColors=[blueCandy,greenCandy,orangeCandy,purpleCandy,redCandy,yellowCandy]\n\nfunction App() {\n    const [currentColorArr,setCurrentColorArr]=useState([])\n    const [elementDrag,setElementDrag]=useState(null)\n    const [elementReplaced,setElementReplaced]=useState(null)\n    const [score,setScore]=useState(0)\n\n    const findFourFromColumn=()=>{\n\n        for(let i=0; i<=39;i++){\n            const columnOfFour=[i,i+width,i+width*2,i+width*3]\n            const matchesColor=currentColorArr[i]\n            const isBlank=currentColorArr[i]===blank\n\n            if(columnOfFour.every(element=>currentColorArr[element]===matchesColor && !isBlank)){\n                setScore((prev)=>prev+4)\n                columnOfFour.forEach(element=>currentColorArr[element]=blank)\n                return true\n            }\n\n        }\n\n    }\n    const findFourFromRow=()=>{\n\n        for(let i=0; i<64;i++){\n            const rowOfFour=[i,i+1,i+2,i+3]\n            const matchesColor=currentColorArr[i]\n            const notValid=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64]\n            const isBlank=currentColorArr[i]===blank\n            if(notValid.includes(i))continue\n            if(rowOfFour.every(element=>currentColorArr[element]===matchesColor && !isBlank)){\n                setScore((prev)=>prev+4)\n                rowOfFour.forEach(element=>currentColorArr[element]=blank)\n                return true\n            }\n\n        }\n\n    }\n\n\n        const findThreeFromColumn=()=>{\n\n            for(let i=0; i<=47;i++){\n                const columnOfThree=[i,i+width,i+width*2]\n                const matchesColor=currentColorArr[i]\n                const isBlank=currentColorArr[i]===blank\n                if(columnOfThree.every(element=>currentColorArr[element]===matchesColor && !isBlank)){\n                    setScore((prev)=>prev+3)\n                    columnOfThree.forEach(element=>currentColorArr[element]=blank)\n                    return true\n                }\n\n            }\n\n        }\n\n    const findThreeFromRow=()=>{\n\n        for(let i=0; i<64;i++){\n            const rowOfThree=[i,i+1,i+2]\n            const matchesColor=currentColorArr[i]\n            const notValid=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64]\n            const isBlank=currentColorArr[i]===blank\n            if(notValid.includes(i))continue\n            if(rowOfThree.every(element=>currentColorArr[element]===matchesColor && !isBlank)){\n                setScore((prev)=>prev+3)\n                rowOfThree.forEach(element=>currentColorArr[element]=blank)\n                return true\n            }\n\n        }\n\n    }\n\n const moveDown=()=>{\n        for(let i=0;i<=55;i++){\n            const firstRow=[0,1,2,3,4,5,6,7]\n            const isFirst=firstRow.includes(i)\n            if(isFirst && currentColorArr[i]===blank){\n                let randomNumber=Math.floor(Math.random()*candyColors.length)\n                currentColorArr[i]=candyColors[randomNumber]\n            }\n\n\n            if(currentColorArr[i+width]===blank){\n                currentColorArr[i+width]=currentColorArr[i];\n                currentColorArr[i]=blank\n            }\n        }\n }\n\n    const getInitialBoard=()=>{\n        const randomColorArray=[]\n      for (let i=0; i< width*width;i++){\n        const randomColor=candyColors[Math.floor(Math.random()*candyColors.length)]\n        randomColorArray.push(randomColor)\n      }\n      setCurrentColorArr(randomColorArray)\n    }\n\nuseEffect(()=>{\n\n    getInitialBoard()\n},[])\n\nuseEffect(()=>{\n\n    const timer=setInterval(()=>{\n        findFourFromColumn()\n        findFourFromRow()\n        findThreeFromColumn()\n        findThreeFromRow()\n        moveDown()\n        setCurrentColorArr([...currentColorArr])\n    },100)\n\n    return ()=>clearInterval(timer)\n\n},[findFourFromColumn,findFourFromRow,findThreeFromColumn,findThreeFromRow,moveDown,currentColorArr])\n    const dragStart=(e)=>{\n           setElementDrag(e.target)\n    }\n    const dragDrop=(e)=>{\n        setElementReplaced(e.target)\n    }\n    const dragEnd=()=>{\n\n        const currentElementDragId= parseInt(elementDrag.getAttribute('data-id'))\n        const currentElementReplacedId= parseInt(elementReplaced.getAttribute('data-id'))\n\n        currentColorArr[currentElementReplacedId]=elementDrag.getAttribute('src')\n        currentColorArr[currentElementDragId]=elementReplaced.getAttribute('src')\n        const moves=[currentElementDragId-1,currentElementDragId-width,currentElementDragId+1,currentElementDragId+width]\n        const move=moves.includes(currentElementReplacedId)\n\n       const isFindFourFromColumn= findFourFromColumn()\n        const isFindFourFromRow=findFourFromRow()\n         const isFindThreeFromColumn=findThreeFromColumn()\n        const isFindThreeFromRow=findThreeFromRow()\n\n        if(currentElementReplacedId && move && (isFindFourFromColumn||isFindFourFromRow||isFindThreeFromColumn||isFindThreeFromRow) ){\n            setElementDrag(null)\n            setElementReplaced(null)\n        }else{\n            currentColorArr[currentElementReplacedId]=elementReplaced.getAttribute('src')\n            currentColorArr[currentElementDragId]=elementDrag.getAttribute('src')\n            setCurrentColorArr([...currentColorArr])\n        }\n\n    }\n\n  return (\n    <div className=\"playground\">\n            <div className=\"game\">\n                {currentColorArr.map((candyColor,index)=>{\n                   return <img key={index} src={candyColor}\n                               alt={candyColor}\n                               data-id={index}\n                                draggable={true}\n                               onDragStart={dragStart}\n                               onDragOver={(e)=>e.preventDefault()}\n                               onDragEnter={(e)=>e.preventDefault()}\n                               onDragLeave={(e)=>e.preventDefault()}\n                               onDrop={dragDrop}\n                               onDragEnd={dragEnd}\n                   />\n                })}\n\n            </div>\n        <div className='score'> Score is: {score}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport App from \"./App\";\nimport './style/index.scss'\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}